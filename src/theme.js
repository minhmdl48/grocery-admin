import { createContext, useState, useMemo } from "react";
import { createTheme } from "@mui/material/styles";

export const tokens = (mode) => ({
  ...(mode === "dark"
    ? {
        gray: {
          100: "rgba(230.48, 233.14, 243.74, 1)",
          200: "rgba(214.87, 218.71, 236.02, 1)",
          300: "rgba(125.73, 131.72, 163.15, 1)",
          400: "rgba(89.85, 95.83, 126.75, 1)",
          500: "rgba(18.94, 20.9, 34.55, 1)",
          600: "rgba(18.94, 20.9, 34.55, 1)",
          700: "rgba(18.94, 20.9, 34.55, 1)",
          800: "rgba(18.94, 20.9, 34.55, 1)",
          900: "rgba(18.94, 20.9, 34.55, 1)",
        },
        primary: {
          100: "rgba(217.25, 227.91, 255, 1)",
          200: "rgba(79.01, 129.05, 255, 1)",
          300: "rgba(30, 94, 255, 1)",
          400: "rgba(30, 94, 255, 1)",
          500: "rgba(30, 94, 255, 1)",
          600: "rgba(30, 94, 255, 1)",
          700: "rgba(30, 94, 255, 1)",
          800: "rgba(30, 94, 255, 1)",
          900: "rgba(30, 94, 255, 1)",
        },
        greenAccent: {
          100: "rgba(5.63, 165.09, 97.11, 1)",
          200: "rgba(31.46, 210.46, 134.15, 1)",
          300: "rgba(31.46, 210.46, 134.15, 1)",
          400: "rgba(31.46, 210.46, 134.15, 1)",
          500: "rgba(31.46, 210.46, 134.15, 1)",
          600: "rgba(31.46, 210.46, 134.15, 1)",
          700: "rgba(31.46, 210.46, 134.15, 1)",
          800: "rgba(31.46, 210.46, 134.15, 1)",
          900: "rgba(31.46, 210.46, 134.15, 1)",
        },
        redAccent: {
          100: "rgba(240, 20, 47, 1)",
          200: "rgba(241, 43, 67, 1)",
          300: "rgba(241, 43, 67, 1)",
          400: "rgba(241, 43, 67, 1)",
          500: "rgba(241, 43, 67, 1)",
          600: "rgba(241, 43, 67, 1)",
          700: "rgba(241, 43, 67, 1)",
          800: "rgba(241, 43, 67, 1)",
          900: "rgba(241, 43, 67, 1)",
        },
        yellowAccent: {
          100: "rgba(248.86, 149.65, 0, 1)",
          200: "rgba(255, 198.9, 0, 1)",
          300: "rgba(255, 198.9, 0, 1)",
          400: "rgba(255, 198.9, 0, 1)",
          500: "rgba(255, 198.9, 0, 1)",
          600: "rgba(255, 198.9, 0, 1)",
          700: "rgba(255, 198.9, 0, 1)",
          800: "rgba(255, 198.9, 0, 1)",
          900: "rgba(255, 198.9, 0, 1)",
        },
        blackAccent: {
          100: "rgba(19, 21, 35, 1)",
          200: "rgba(19, 21, 35, 0.9)",
          300: "rgba(19, 21, 35, 0.8)",
          400: "rgba(19, 21, 35, 0.7)",
          500: "rgba(19, 21, 35, 0.6)",
          600: "rgba(19, 21, 35, 0.5)",
          700: "rgba(19, 21, 35, 0.4)",
          800: "rgba(19, 21, 35, 0.3)",
          900: "rgba(19, 21, 35, 0.2)",
        }
      }
    : {
        gray: {
          100: "rgba(230.48, 233.14, 243.74, 1)",
          200: "rgba(214.87, 218.71, 236.02, 1)",
          300: "rgba(125.73, 131.72, 163.15, 1)",
          400: "rgba(89.85, 95.83, 126.75, 1)",
          500: "rgba(18.94, 20.9, 34.55, 1)",
          600: "rgba(18.94, 20.9, 34.55, 1)",
          700: "rgba(18.94, 20.9, 34.55, 1)",
          800: "rgba(18.94, 20.9, 34.55, 1)",
          900: "rgba(18.94, 20.9, 34.55, 1)",
        },
        primary: {
          100: "rgba(217.25, 227.91, 255, 1)",
          200: "rgba(79.01, 129.05, 255, 1)",
          300: "rgba(30, 94, 255, 1)",
          400: "rgba(30, 94, 255, 1)",
          500: "rgba(30, 94, 255, 1)",
          600: "rgba(30, 94, 255, 1)",
          700: "rgba(30, 94, 255, 1)",
          800: "rgba(30, 94, 255, 1)",
          900: "rgba(30, 94, 255, 1)",
        },
        greenAccent: {
          100: "rgba(5.63, 165.09, 97.11, 1)",
          200: "rgba(31.46, 210.46, 134.15, 1)",
          300: "rgba(31.46, 210.46, 134.15, 1)",
          400: "rgba(31.46, 210.46, 134.15, 1)",
          500: "rgba(31.46, 210.46, 134.15, 1)",
          600: "rgba(31.46, 210.46, 134.15, 1)",
          700: "rgba(31.46, 210.46, 134.15, 1)",
          800: "rgba(31.46, 210.46, 134.15, 1)",
          900: "rgba(31.46, 210.46, 134.15, 1)",
        },
        redAccent: {
          100: "rgba(240, 20, 47, 1)",
          200: "rgba(241, 43, 67, 1)",
          300: "rgba(241, 43, 67, 1)",
          400: "rgba(241, 43, 67, 1)",
          500: "rgba(241, 43, 67, 1)",
          600: "rgba(241, 43, 67, 1)",
          700: "rgba(241, 43, 67, 1)",
          800: "rgba(241, 43, 67, 1)",
          900: "rgba(241, 43, 67, 1)",
        },
        yellowAccent: {
          100: "rgba(248.86, 149.65, 0, 1)",
          200: "rgba(255, 198.9, 0, 1)",
          300: "rgba(255, 198.9, 0, 1)",
          400: "rgba(255, 198.9, 0, 1)",
          500: "rgba(255, 198.9, 0, 1)",
          600: "rgba(255, 198.9, 0, 1)",
          700: "rgba(255, 198.9, 0, 1)",
          800: "rgba(255, 198.9, 0, 1)",
          900: "rgba(255, 198.9, 0, 1)",
        },
        blackAccent: {
          900: "rgba(19, 21, 35, 1)",
          800: "rgba(19, 21, 35, 0.9)",
          700: "rgba(19, 21, 35, 0.8)",
          600: "rgba(19, 21, 35, 0.7)",
          500: "rgba(19, 21, 35, 0.6)",
          400: "rgba(19, 21, 35, 0.5)",
          300: "rgba(19, 21, 35, 0.4)",
          200: "rgba(19, 21, 35, 0.3)",
          100: "rgba(19, 21, 35, 0.2)",
        }
      }),
});

export const ColorModeContext = createContext({
  toggleColorMode: () => {},
});

export const useMode = () => {
  const [mode, setMode] = useState("light");

  const colorMode = useMemo(
    () => ({
      toggleColorMode: () => {
        setMode((prevMode) => (prevMode === "light" ? "dark" : "light"));
      },
    }),
    []
  );

  const theme = useMemo(() => createTheme(tokens(mode)), [mode]);

  return [theme, colorMode];
};